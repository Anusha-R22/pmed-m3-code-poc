CREATE TABLE CODINGHISTORY (CLINICALTRIALID NUMBER(11), TRIALSITE VARCHAR2(8), PERSONID NUMBER(11), RESPONSETASKID NUMBER(11), REPEATNUMBER NUMBER(6), RESPONSETIMESTAMP NUMBER(16,10), DICTIONARYNAME VARCHAR2(100), DICTIONARYVERSION VARCHAR2(10), CODINGSTATUS NUMBER(6), CODINGDETAILS VARCHAR2(4000), VISITID NUMBER(11), VISITCYCLENUMBER NUMBER(6), CRFPAGEID NUMBER(11), CRFPAGECYCLENUMBER NUMBER(6), USERNAME VARCHAR2(20), USERNAMEFULL VARCHAR2(100), RESPONSETIMESTAMP_TZ NUMBER(6), CODINGTIMESTAMP NUMBER(16,10), CODINGTIMESTAMP_TZ NUMBER(6), REASONFORCHANGE VARCHAR2(255), STATUS NUMBER(6), RESPONSEVALUE VARCHAR2(255), CONSTRAINT PKCODINGHISTORY PRIMARY KEY (CLINICALTRIALID, TRIALSITE, PERSONID, RESPONSETASKID, REPEATNUMBER, CODINGTIMESTAMP))
ALTER TABLE DATAITEMRESPONSE ADD DICTIONARYNAME VARCHAR2(100)
ALTER TABLE DATAITEMRESPONSE ADD DICTIONARYVERSION VARCHAR2(10)
ALTER TABLE DATAITEMRESPONSE ADD CODINGSTATUS NUMBER(6)
ALTER TABLE DATAITEMRESPONSE ADD CODINGDETAILS VARCHAR2(4000)
ALTER TABLE DATAITEM ADD DICTIONARYID NUMBER(6)
INSERT INTO DATATYPE (DATATYPEID, DATATYPENAME) VALUES (8, 'Thesaurus')
INSERT INTO MACROTable (TableName,SegmentId,STYDEF,PATRSP,LABDEF) VALUES ('CodingHistory','100',0,1,0)
CREATE OR REPLACE PROCEDURE SP_MACRO_CODING_UPDATE ( V_CLINICALTRIALID NUMBER, V_TRIALSITE VARCHAR2, V_PERSONID NUMBER, V_RESPONSETASKID NUMBER, V_REPEATNUMBER NUMBER, V_RESPONSETIMESTAMP NUMBER, V_DICTIONARYNAME VARCHAR2, V_DICTIONARYVERSION VARCHAR2, V_CODINGSTATUS NUMBER, V_CODINGDETAILS VARCHAR2, V_VISITID NUMBER, V_VISITCYCLENUMBER NUMBER, V_CRFPAGEID NUMBER, V_CRFPAGECYCLENUMBER NUMBER, V_USERNAME VARCHAR2, V_USERNAMEFULL VARCHAR2, V_RESPONSETIMESTAMP_TZ NUMBER, V_CODINGTIMESTAMP NUMBER, V_CODINGTIMESTAMP_TZ NUMBER, V_REASONFORCHANGE VARCHAR2, V_RESPONSEVALUE VARCHAR2 ) is begin update codinghistory set status = 0  where clinicaltrialid = v_clinicaltrialid  and trialsite = v_trialsite and personid = v_personid  and responsetaskid = v_responsetaskid  and repeatnumber = v_repeatnumber; insert into codinghistory (clinicaltrialid, trialsite, personid, responsetaskid, repeatnumber, responsetimestamp, dictionaryname, dictionaryversion, codingstatus, codingdetails, visitid, visitcyclenumber, crfpageid, crfpagecyclenumber, username, usernamefull, responsetimestamp_tz, codingtimestamp, codingtimestamp_tz, reasonforchange, status, responsevalue ) values (v_clinicaltrialid, v_trialsite, v_personid, v_responsetaskid, v_repeatnumber, v_responsetimestamp, v_dictionaryname, v_dictionaryversion, v_codingstatus, v_codingdetails, v_visitid, v_visitcyclenumber, v_crfpageid, v_crfpagecyclenumber, v_username, v_usernamefull, v_responsetimestamp_tz, v_codingtimestamp, v_codingtimestamp_tz, v_reasonforchange, 1, v_responsevalue ); call SP_MACRO_CODING_UPDATE_DIR(V_CLINICALTRIALID, V_TRIALSITE, V_PERSONID, V_RESPONSETASKID, V_REPEATNUMBER, V_DICTIONARYNAME, V_DICTIONARYVERSION, V_CODINGSTATUS, V_CODINGDETAILS); end SP_MACRO_CODING_UPDATE;
CREATE OR REPLACE PROCEDURE SP_MACRO_CODING_UPDATE_DIR ( V_CLINICALTRIALID NUMBER, V_TRIALSITE VARCHAR2, V_PERSONID NUMBER, V_RESPONSETASKID NUMBER, V_REPEATNUMBER NUMBER, V_DICTIONARYNAME VARCHAR2, V_DICTIONARYVERSION VARCHAR2, V_CODINGSTATUS NUMBER, V_CODINGDETAILS VARCHAR2 ) is begin update dataitemresponse set dictionaryname = v_dictionaryname,  dictionaryversion = v_dictionaryversion, codingstatus = v_codingstatus, codingdetails = v_codingdetails where clinicaltrialid = v_clinicaltrialid  and trialsite = v_trialsite  and personid = v_personid and responsetaskid = v_responsetaskid  and repeatnumber = v_repeatnumber; end SP_MACRO_CODING_UPDATE_DIR;
create or replace procedure SP_MACRO_IMP_DIR(V_RETURNVALUE OUT NUMBER, V_CLINICALTRIALID NUMBER, V_TRIALSITE VARCHAR2, V_PERSONID NUMBER, V_RESPONSETASKID NUMBER, V_VISITID NUMBER, V_CRFPAGEID NUMBER, V_CRFELEMENTID NUMBER, V_DATAITEMID NUMBER, V_VISITCYCLENUMBER NUMBER, V_CRFPAGECYCLENUMBER NUMBER, V_CRFPAGETASKID NUMBER, V_RESPONSEVALUE VARCHAR2, V_RESPONSETIMESTAMP NUMBER, V_VALUECODE VARCHAR2, V_USERNAME VARCHAR2, V_UNITOFMEASUREMENT VARCHAR2, V_COMMENTS VARCHAR2, V_RESPONSESTATUS NUMBER, V_CHANGED NUMBER, V_SOFTWAREVERSION VARCHAR2, V_REASONFORCHANGE VARCHAR2, V_LOCKSTATUS NUMBER, V_IMPORTTIMESTAMP NUMBER, V_VALIDATIONID NUMBER, V_VALIDATIONMESSAGE VARCHAR2, V_OVERRULEREASON VARCHAR2, V_LABRESULT VARCHAR2, V_CTCGRADE NUMBER, V_CLINICALTESTDATE NUMBER, V_LABORATORYCODE VARCHAR2, V_HADVALUE NUMBER, V_REPEATNUMBER NUMBER, V_CHANGECOUNT NUMBER, V_DISCREPANCYSTATUS NUMBER, V_SDVSTATUS NUMBER, V_NOTESTATUS NUMBER, V_RESPONSETIMESTAMP_TZ NUMBER, V_IMPORTTIMESTAMP_TZ NUMBER, V_DATABASETIMESTAMP NUMBER, V_DATABASETIMESTAMP_TZ NUMBER, V_SEQUENCEID NUMBER, V_STANDARDVALUE NUMBER, V_USERNAMEFULL VARCHAR2, V_DICTIONARYNAME VARCHAR2, V_DICTIONARYVERSION VARCHAR2, V_CODINGSTATUS NUMBER, V_CODINGDETAILS VARCHAR2) is begin begin insert into dataitemresponse (clinicaltrialid, trialsite, personid, responsetaskid, visitid, crfpageid, crfelementid, dataitemid, visitcyclenumber, crfpagecyclenumber, crfpagetaskid, responsevalue, responsetimestamp, valuecode, username, unitofmeasurement, comments, responsestatus, changed, softwareversion, reasonforchange, lockstatus, importtimestamp, validationid, validationmessage, overrulereason,labresult, ctcgrade, clinicaltestdate, laboratorycode, hadvalue, repeatnumber, changecount, discrepancystatus, sdvstatus, notestatus, responsetimestamp_tz, importtimestamp_tz, databasetimestamp, databasetimestamp_tz, sequenceid, standardvalue, usernamefull, dictionaryname, dictionaryversion, codingstatus, codingdetails) values (v_clinicaltrialid, v_trialsite, v_personid, v_responsetaskid, v_visitid, v_crfpageid, v_crfelementid, v_dataitemid, v_visitcyclenumber, v_crfpagecyclenumber, v_crfpagetaskid, v_responsevalue, v_responsetimestamp, v_valuecode, v_username, v_unitofmeasurement, v_comments, v_responsestatus, v_changed, v_softwareversion, v_reasonforchange, v_lockstatus, v_importtimestamp, v_validationid, v_validationmessage, v_overrulereason, v_labresult, v_ctcgrade, v_clinicaltestdate, v_laboratorycode, v_hadvalue, v_repeatnumber, v_changecount, v_discrepancystatus, v_sdvstatus, v_notestatus, v_responsetimestamp_tz, v_importtimestamp_tz, v_databasetimestamp, v_databasetimestamp_tz, v_sequenceid, v_standardvalue, v_usernamefull, v_dictionaryname, v_dictionaryversion, v_codingstatus, v_codingdetails); v_returnvalue := 1; exception when dup_val_on_index then update dataitemresponse set clinicaltrialid = v_clinicaltrialid, trialsite = v_trialsite, personid = v_personid, responsetaskid = v_responsetaskid, visitid = v_visitid, crfpageid = v_crfpageid, crfelementid = v_crfelementid, dataitemid = v_dataitemid, visitcyclenumber = v_visitcyclenumber, crfpagecyclenumber = v_crfpagecyclenumber, crfpagetaskid = v_crfpagetaskid, responsevalue = v_responsevalue, responsetimestamp = v_responsetimestamp, valuecode = v_valuecode, username = v_username, unitofmeasurement = v_unitofmeasurement, comments = v_comments, responsestatus = v_responsestatus, changed = v_changed, softwareversion = v_softwareversion, reasonforchange = v_reasonforchange, lockstatus = v_lockstatus, importtimestamp = v_importtimestamp, validationid = v_validationid, validationmessage = v_validationmessage, overrulereason = v_overrulereason, labresult = v_labresult, ctcgrade = v_ctcgrade, clinicaltestdate = v_clinicaltestdate, laboratorycode = v_laboratorycode, hadvalue = v_hadvalue, repeatnumber = v_repeatnumber, changecount = v_changecount, discrepancystatus = v_discrepancystatus, sdvstatus = v_sdvstatus, notestatus = v_notestatus, responsetimestamp_tz = v_responsetimestamp_tz, importtimestamp_tz = v_importtimestamp_tz, databasetimestamp = v_databasetimestamp, databasetimestamp_tz = v_databasetimestamp_tz, sequenceid = v_sequenceid, standardvalue = v_standardvalue, usernamefull = v_usernamefull, dictionaryname = v_dictionaryname, dictionaryversion = v_dictionaryversion, codingstatus = v_codingstatus, codingdetails = v_codingdetails where clinicaltrialid = v_clinicaltrialid and trialsite = v_trialsite and personid = v_personid and responsetaskid = v_responsetaskid and repeatnumber = v_repeatnumber; v_returnvalue := 2; when others then v_returnvalue := 0; end; end SP_MACRO_IMP_DIR;
create or replace procedure SP_MACRO_IMP_CODINGHISTORY(V_RETURNVALUE OUT NUMBER, V_CLINICALTRIALID NUMBER, V_TRIALSITE VARCHAR2, V_PERSONID NUMBER, V_RESPONSETASKID NUMBER, V_REPEATNUMBER NUMBER, V_RESPONSETIMESTAMP NUMBER, V_DICTIONARYNAME VARCHAR2, V_DICTIONARYVERSION VARCHAR2, V_CODINGSTATUS NUMBER, V_CODINGDETAILS VARCHAR2, V_VISITID NUMBER, V_VISITCYCLENUMBER NUMBER, V_CRFPAGEID NUMBER, V_CRFPAGECYCLENUMBER NUMBER, V_USERNAME VARCHAR2, V_USERNAMEFULL VARCHAR2, V_RESPONSETIMESTAMP_TZ NUMBER, V_CODINGTIMESTAMP NUMBER, V_CODINGTIMESTAMP_TZ NUMBER, V_REASONFORCHANGE VARCHAR2, V_STATUS NUMBER, V_RESPONSEVALUE VARCHAR2) is begin begin insert into codinghistory (clinicaltrialid, trialsite, personid, responsetaskid, repeatnumber, responsetimestamp, dictionaryname, dictionaryversion, codingstatus, codingdetails, visitid, visitcyclenumber, crfpageid, crfpagecyclenumber, username, usernamefull, responsetimestamp_tz, codingtimestamp, codingtimestamp_tz, reasonforchange, status, responsevalue) values (v_clinicaltrialid, v_trialsite, v_personid, v_responsetaskid, v_repeatnumber, v_responsetimestamp, v_dictionaryname, v_dictionaryversion, v_codingstatus, v_codingdetails, v_visitid, v_visitcyclenumber, v_crfpageid, v_crfpagecyclenumber, v_username, v_usernamefull, v_responsetimestamp_tz, v_codingtimestamp, v_codingtimestamp_tz, v_reasonforchange, v_status, v_responsevalue); v_returnvalue := 1; exception when dup_val_on_index then update codinghistory set clinicaltrialid = v_clinicaltrialid, trialsite = v_trialsite,	personid = v_personid, responsetaskid = v_responsetaskid,	repeatnumber = v_repeatnumber, responsetimestamp = v_responsetimestamp,	dictionaryname = v_dictionaryname, dictionaryversion = v_dictionaryversion,	codingstatus = v_codingstatus, codingdetails = v_codingdetails,	visitid = v_visitid, visitcyclenumber = v_visitcyclenumber,	crfpageid = v_crfpageid, crfpagecyclenumber = v_crfpagecyclenumber,	username = v_username, usernamefull = v_usernamefull, responsetimestamp_tz = v_responsetimestamp_tz, codingtimestamp = v_codingtimestamp, codingtimestamp_tz = v_codingtimestamp_tz, reasonforchange = v_reasonforchange,	status = v_status, responsevalue = v_responsevalue where clinicaltrialid = v_clinicaltrialid and trialsite = v_trialsite and personid = v_personid and responsetaskid = v_responsetaskid and repeatnumber = v_repeatnumber and codingtimestamp = v_codingtimestamp; v_returnvalue := 2; when others then v_returnvalue := 99; end; end SP_MACRO_IMP_CODINGHISTORY;
delete from NewDBColumn
INSERT INTO NewDBColumn (VersionMajor,VersionMinor,VersionRevision,TableName,ColumnName,ColumnOrder,DefaultValue,ChangeType,ColumnNumber) VALUES (3,0,73,'DataItem','DictionaryId',null,'#NULL#','NEWCOLUMN',null)
INSERT INTO NewDBColumn (VersionMajor,VersionMinor,VersionRevision,TableName,ColumnName,ColumnOrder,DefaultValue,ChangeType,ColumnNumber) VALUES (3,0,73,'DataItemResponse','DictionaryName',1,'#NULL#','NEWCOLUMN',null)
INSERT INTO NewDBColumn (VersionMajor,VersionMinor,VersionRevision,TableName,ColumnName,ColumnOrder,DefaultValue,ChangeType,ColumnNumber) VALUES (3,0,73,'DataItemResponse','DictionaryVersion',2,'#NULL#','NEWCOLUMN',null)
INSERT INTO NewDBColumn (VersionMajor,VersionMinor,VersionRevision,TableName,ColumnName,ColumnOrder,DefaultValue,ChangeType,ColumnNumber) VALUES (3,0,73,'DataItemResponse','CodingStatus',3,'#NULL#','NEWCOLUMN',null)
INSERT INTO NewDBColumn (VersionMajor,VersionMinor,VersionRevision,TableName,ColumnName,ColumnOrder,DefaultValue,ChangeType,ColumnNumber) VALUES (3,0,73,'DataItemResponse','CodingDetails',4,'#NULL#','NEWCOLUMN',null)
UPDATE MACROCONTROL SET BUILDSUBVERSION = '73' WHERE MACROVERSION = '3.0'