CREATE TABLE CODINGHISTORY (CLINICALTRIALID int, TRIALSITE varchar(8), PERSONID int, RESPONSETASKID int, REPEATNUMBER smallint, RESPONSETIMESTAMP decimal(16,10), DICTIONARYNAME varchar(100), DICTIONARYVERSION varchar(10), CODINGSTATUS smallint, CODINGDETAILS varchar(4000), VISITID int, VISITCYCLENUMBER smallint, CRFPAGEID int, CRFPAGECYCLENUMBER smallint, USERNAME varchar(20), USERNAMEFULL varchar(100), RESPONSETIMESTAMP_TZ smallint, CODINGTIMESTAMP decimal(16,10), CODINGTIMESTAMP_TZ smallint, REASONFORCHANGE varchar(255), STATUS smallint, RESPONSEVALUE varchar(255), CONSTRAINT PKCODINGHISTORY PRIMARY KEY (CLINICALTRIALID, TRIALSITE, PERSONID, RESPONSETASKID, REPEATNUMBER, CODINGTIMESTAMP))
ALTER TABLE DATAITEMRESPONSE ADD DICTIONARYNAME varchar(100)
ALTER TABLE DATAITEMRESPONSE ADD DICTIONARYVERSION varchar(10)
ALTER TABLE DATAITEMRESPONSE ADD CODINGSTATUS smallint
ALTER TABLE DATAITEMRESPONSE ADD CODINGDETAILS varchar(4000)
ALTER TABLE DATAITEM ADD DICTIONARYID smallint
INSERT INTO DATATYPE (DATATYPEID, DATATYPENAME) VALUES (8, 'Thesaurus')
INSERT INTO MACROTable (TableName,SegmentId,STYDEF,PATRSP,LABDEF) VALUES ('CodingHistory','100',0,1,0)
CREATE PROCEDURE SP_MACRO_CODING_UPDATE(@CLINICALTRIALID int, @TRIALSITE varchar(8), @PERSONID int, @RESPONSETASKID int, @REPEATNUMBER smallint, @RESPONSETIMESTAMP double precision, @DICTIONARYNAME varchar(100), @DICTIONARYVERSION varchar(10), @CODINGSTATUS smallint, @CODINGDETAILS varchar(4000), @VISITID int, @VISITCYCLENUMBER smallint, @CRFPAGEID int, @CRFPAGECYCLENUMBER smallint, @USERNAME varchar(20), @USERNAMEFULL varchar(100), @RESPONSETIMESTAMP_TZ smallint, @CODINGTIMESTAMP double precision, @CODINGTIMESTAMP_TZ smallint, @REASONFORCHANGE varchar(255), @RESPONSEVALUE varchar(255)) AS BEGIN update codinghistory set status = 0 where clinicaltrialid = @CLINICALTRIALID and trialsite = @TRIALSITE and personid = @PERSONID and responsetaskid = @RESPONSETASKID and repeatnumber = @REPEATNUMBER insert into codinghistory (clinicaltrialid, trialsite, personid, responsetaskid, repeatnumber, responsetimestamp, dictionaryname, dictionaryversion, codingstatus, codingdetails, visitid, visitcyclenumber, crfpageid, crfpagecyclenumber, username, usernamefull, responsetimestamp_tz, codingtimestamp, codingtimestamp_tz, reasonforchange, status, responsevalue) values (@CLINICALTRIALID, @TRIALSITE, @PERSONID, @RESPONSETASKID, @REPEATNUMBER, @RESPONSETIMESTAMP, @DICTIONARYNAME, @DICTIONARYVERSION, @CODINGSTATUS, @CODINGDETAILS, @VISITID, @VISITCYCLENUMBER, @CRFPAGEID, @CRFPAGECYCLENUMBER, @USERNAME, @USERNAMEFULL, @RESPONSETIMESTAMP_TZ, @CODINGTIMESTAMP, @CODINGTIMESTAMP_TZ, @REASONFORCHANGE, 1, @RESPONSEVALUE) exec SP_MACRO_CODING_UPDATE_DIR @CLINICALTRIALID, @TRIALSITE, @PERSONID, @RESPONSETASKID, @REPEATNUMBER, @DICTIONARYNAME, @DICTIONARYVERSION, @CODINGSTATUS, @CODINGDETAILS END
CREATE PROCEDURE SP_MACRO_CODING_UPDATE_DIR(@CLINICALTRIALID int, @TRIALSITE varchar(8), @PERSONID int, @RESPONSETASKID int, @REPEATNUMBER smallint, @DICTIONARYNAME varchar(100), @DICTIONARYVERSION varchar(10), @CODINGSTATUS smallint, @CODINGDETAILS varchar(4000)) AS BEGIN update dataitemresponse set dictionaryname = @DICTIONARYNAME,  dictionaryversion = @DICTIONARYVERSION,  codingstatus = @CODINGSTATUS,  codingdetails = @CODINGDETAILS  where clinicaltrialid = @CLINICALTRIALID  and trialsite = @TRIALSITE  and personid = @PERSONID  and responsetaskid = @RESPONSETASKID  and repeatnumber = @REPEATNUMBER END
DROP PROCEDURE SP_MACRO_IMP_DIR
CREATE PROCEDURE SP_MACRO_IMP_DIR( @clinicaltrialid  int, @trialsite  varchar(8), @personid  int, @responsetaskid int, @visitid   int, @crfpageid  int, @crfelementid  smallint, @dataitemid  int, @visitcyclenumber smallint, @crfpagecyclenumber smallint, @crfpagetaskid  int, @responsevalue varchar(255), @responsetimestamp double precision, @valuecode  varchar(15), @username  Varchar(20), @unitofmeasurement Varchar(15), @comments  Varchar(255), @responsestatus Smallint, @changed  Smallint, @softwareversion Varchar(15), @reasonforchange Varchar(255), @lockstatus  Tinyint, @importtimestamp double precision, @validationid  Smallint, @validationmessage Varchar(2000), @overrulereason Varchar(255), @labresult  Varchar(1), @ctcgrade  Smallint, @clinicaltestdate double precision, @laboratorycode Varchar(15), @hadvalue  Smallint, @repeatnumber  Smallint, @changecount  Smallint, @discrepancystatus Smallint, @sdvstatus  Smallint, @notestatus  Smallint, @responsetimestamp_tz Smallint, @importtimestamp_tz Smallint, @databasetimestamp double precision, @databasetimestamp_tz Smallint, @sequenceid  double precision, @standardvalue  double precision, @usernamefull  Varchar(100), @dictionaryname varchar(100), @dictionaryversion varchar(10), @codingstatus smallint, @codingdetails varchar(4000)) AS BEGIN SET NOCOUNT ON DECLARE @ErrNumber Int DECLARE @RecCount Int SELECT @RecCount =  (Select count(*) from DataItemResponse where CLINICALTRIALID = @clinicaltrialid AND TRIALSITE = @trialsite AND PERSONID = @personid AND RESPONSETASKID = @responsetaskid AND  REPEATNUMBER = @repeatnumber) if @RecCount=0 BEGIN insert into DataItemResponse (  CLINICALTRIALID,TRIALSITE,PERSONID,RESPONSETASKID,VISITID,CRFPAGEID,CRFELEMENTID, DATAITEMID,VISITCYCLENUMBER,CRFPAGECYCLENUMBER,CRFPAGETASKID,RESPONSEVALUE, RESPONSETIMESTAMP,VALUECODE,USERNAME,UNITOFMEASUREMENT,COMMENTS,RESPONSESTATUS, CHANGED,SOFTWAREVERSION,REASONFORCHANGE,LOCKSTATUS,IMPORTTIMESTAMP,VALIDATIONID, VALIDATIONMESSAGE,OVERRULEREASON,LABRESULT,CTCGRADE,CLINICALTESTDATE, LABORATORYCODE,HADVALUE,REPEATNUMBER,CHANGECOUNT,DISCREPANCYSTATUS, SDVSTATUS,NOTESTATUS,RESPONSETIMESTAMP_TZ,IMPORTTIMESTAMP_TZ,DATABASETIMESTAMP, DATABASETIMESTAMP_TZ,SEQUENCEID,STANDARDVALUE,USERNAMEFULL,DICTIONARYNAME,DICTIONARYVERSION,CODINGSTATUS,CODINGDETAILS) VALUES (  @clinicaltrialid,@trialsite,@personid,@responsetaskid,@visitid,@crfpageid,@crfelementid, @dataitemid,@visitcyclenumber,@crfpagecyclenumber,@crfpagetaskid,@responsevalue, @responsetimestamp,@valuecode,@username,@unitofmeasurement,@comments,@responsestatus, @changed,@softwareversion,@reasonforchange,@lockstatus,@importtimestamp,@validationid, @validationmessage,@overrulereason,@labresult,@ctcgrade,@clinicaltestdate,@laboratorycode, @hadvalue,@repeatnumber,@changecount,@discrepancystatus,@sdvstatus,@notestatus, @responsetimestamp_tz,@importtimestamp_tz,@databasetimestamp,@databasetimestamp_tz, @sequenceid,@standardvalue,@usernamefull,@dictionaryname,@dictionaryversion,@codingstatus,@codingdetails ) return 1 END ELSE BEGIN UPDATE DataItemResponse SET VISITID = @visitid, CRFPAGEID = @crfpageid, CRFELEMENTID = @crfelementid, DATAITEMID = @dataitemid, VISITCYCLENUMBER = @visitcyclenumber, CRFPAGECYCLENUMBER = @crfpagecyclenumber, CRFPAGETASKID = @crfpagetaskid, RESPONSEVALUE = @responsevalue, RESPONSETIMESTAMP = @responsetimestamp, VALUECODE = @valuecode, USERNAME = @username, UNITOFMEASUREMENT = @unitofmeasurement, COMMENTS = @comments, RESPONSESTATUS = @responsestatus, CHANGED = @changed, SOFTWAREVERSION = @softwareversion, REASONFORCHANGE = @reasonforchange, LOCKSTATUS = @lockstatus, IMPORTTIMESTAMP = @importtimestamp, VALIDATIONID = @validationid, VALIDATIONMESSAGE = @validationmessage, OVERRULEREASON = @overrulereason, LABRESULT = @labresult, CTCGRADE = @ctcgrade, CLINICALTESTDATE = @clinicaltestdate, LABORATORYCODE = @laboratorycode, HADVALUE = @hadvalue, CHANGECOUNT = @changecount, DISCREPANCYSTATUS = @discrepancystatus, SDVSTATUS = @sdvstatus, NOTESTATUS = @notestatus, RESPONSETIMESTAMP_TZ = @responsetimestamp_tz, IMPORTTIMESTAMP_TZ = @importtimestamp_tz, DATABASETIMESTAMP = @databasetimestamp, DATABASETIMESTAMP_TZ = @databasetimestamp_tz, SEQUENCEID = @sequenceid, STANDARDVALUE = @standardvalue, USERNAMEFULL = @usernamefull, DICTIONARYNAME = @dictionaryname, DICTIONARYVERSION = @dictionaryversion, CODINGSTATUS = @codingstatus, CODINGDETAILS = @codingdetails WHERE CLINICALTRIALID = @clinicaltrialid AND TRIALSITE = @trialsite AND PERSONID = @personid AND RESPONSETASKID = @responsetaskid AND  REPEATNUMBER = @repeatnumber RETURN 2 END END
CREATE PROCEDURE SP_MACRO_IMP_CODINGHISTORY( @clinicaltrialid int, @trialsite varchar(8), @personid int, @responsetaskid int, @repeatnumber Smallint, @responsetimestamp double precision, @dictionaryname varchar(100), @dictionaryversion varchar(10), @codingstatus smallint, @codingdetails varchar(4000), @visitid int, @visitcyclenumber smallint, @crfpageid int, @crfpagecyclenumber smallint, @username Varchar(20), @usernamefull  Varchar(100), @responsetimestamp_tz Smallint, @codingtimestamp double precision, @codingtimestamp_tz Smallint, @reasonforchange varchar(255), @status smallint, @responsevalue varchar(255) ) AS BEGIN SET NOCOUNT ON DECLARE @ErrNumber Int DECLARE @RecCount Int SELECT @RecCount =  (Select count(*) from CodingHistory where CLINICALTRIALID = @clinicaltrialid AND TRIALSITE = @trialsite AND PERSONID = @personid AND RESPONSETASKID = @responsetaskid AND REPEATNUMBER = @repeatnumber AND CODINGTIMESTAMP = @codingtimestamp) IF @RecCount=0 BEGIN insert into CodingHistory ( CLINICALTRIALID,TRIALSITE,PERSONID,RESPONSETASKID,REPEATNUMBER,RESPONSETIMESTAMP,	DICTIONARYNAME,DICTIONARYVERSION,CODINGSTATUS,CODINGDETAILS,VISITID,VISITCYCLENUMBER,CRFPAGEID,CRFPAGECYCLENUMBER,USERNAME,USERNAMEFULL,RESPONSETIMESTAMP_TZ,CODINGTIMESTAMP,	CODINGTIMESTAMP_TZ,REASONFORCHANGE,STATUS,RESPONSEVALUE ) VALUES (  @clinicaltrialid,@trialsite,@personid,@responsetaskid,@repeatnumber,@responsetimestamp,	@dictionaryname,@dictionaryversion,@codingstatus,@codingdetails,@visitid,@visitcyclenumber,	@crfpageid,@crfpagecyclenumber,@username,@usernamefull,@responsetimestamp_tz,@codingtimestamp, @codingtimestamp_tz,@reasonforchange,@status,@responsevalue ) return 1 END ELSE BEGIN UPDATE CodingHistory SET DICTIONARYNAME = @dictionaryname, DICTIONARYVERSION = @dictionaryversion, CODINGSTATUS = @codingstatus, CODINGDETAILS = @codingdetails, VISITID = @visitid, VISITCYCLENUMBER = @visitcyclenumber, CRFPAGEID = @crfpageid, CRFPAGECYCLENUMBER = @crfpagecyclenumber, USERNAME = @username, USERNAMEFULL = @usernamefull, RESPONSETIMESTAMP_TZ = @responsetimestamp_tz, CODINGTIMESTAMP = @codingtimestamp, CODINGTIMESTAMP_TZ = @codingtimestamp_tz, REASONFORCHANGE = @reasonforchange, STATUS = @status, RESPONSEVALUE = @responsevalue WHERE CLINICALTRIALID = @clinicaltrialid AND TRIALSITE = @trialsite AND PERSONID = @personid AND RESPONSETASKID = @responsetaskid AND REPEATNUMBER = @repeatnumber AND CODINGTIMESTAMP = @codingtimestamp RETURN 2 END END
delete from NewDBColumn
INSERT INTO NewDBColumn (VersionMajor,VersionMinor,VersionRevision,TableName,ColumnName,ColumnOrder,DefaultValue,ChangeType,ColumnNumber) VALUES (3,0,73,'DataItem','DictionaryId',null,'#NULL#','NEWCOLUMN',null)
INSERT INTO NewDBColumn (VersionMajor,VersionMinor,VersionRevision,TableName,ColumnName,ColumnOrder,DefaultValue,ChangeType,ColumnNumber) VALUES (3,0,73,'DataItemResponse','DictionaryName',1,'#NULL#','NEWCOLUMN',null)
INSERT INTO NewDBColumn (VersionMajor,VersionMinor,VersionRevision,TableName,ColumnName,ColumnOrder,DefaultValue,ChangeType,ColumnNumber) VALUES (3,0,73,'DataItemResponse','DictionaryVersion',2,'#NULL#','NEWCOLUMN',null)
INSERT INTO NewDBColumn (VersionMajor,VersionMinor,VersionRevision,TableName,ColumnName,ColumnOrder,DefaultValue,ChangeType,ColumnNumber) VALUES (3,0,73,'DataItemResponse','CodingStatus',3,'#NULL#','NEWCOLUMN',null)
INSERT INTO NewDBColumn (VersionMajor,VersionMinor,VersionRevision,TableName,ColumnName,ColumnOrder,DefaultValue,ChangeType,ColumnNumber) VALUES (3,0,73,'DataItemResponse','CodingDetails',4,'#NULL#','NEWCOLUMN',null)
UPDATE MACROCONTROL SET BUILDSUBVERSION = '73' WHERE MACROVERSION = '3.0'